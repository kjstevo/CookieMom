//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations.
//


package net.kjmaster.cookiemom.cupboard;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import com.googlecode.androidannotations.api.SdkVersionHelper;
import net.kjmaster.cookiemom.R.id;
import net.kjmaster.cookiemom.R.layout;
import net.kjmaster.cookiemom.global.ISettings_;

@SuppressWarnings("ALL")
public final class CupboardPickupActivity_
        extends CupboardPickupActivity {


    @Override
    public void onCreate(Bundle savedInstanceState) {
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        setContentView(layout.scout_order_layout);
    }

    private void init_(Bundle savedInstanceState) {
        iSettings = new ISettings_(this);
        injectExtras_();
    }

    private void afterSetContentView_() {
        {
            View view = findViewById(id.cases_radio_button);
            if (view != null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        CupboardPickupActivity_.this.casesClick();
                    }

                }
                );
            }
        }
        {
            View view = findViewById(id.boxes_radio_button);
            if (view != null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        CupboardPickupActivity_.this.boxesClick();
                    }

                }
                );
            }
        }
        afterViewFrag();
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        afterSetContentView_();
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        afterSetContentView_();
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        afterSetContentView_();
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (((SdkVersionHelper.getSdkInt() < 5) && (keyCode == KeyEvent.KEYCODE_BACK)) && (event.getRepeatCount() == 0)) {
            onBackPressed();
        }
        return super.onKeyDown(keyCode, event);
    }

    public static CupboardPickupActivity_.IntentBuilder_ intent(Context context) {
        return new CupboardPickupActivity_.IntentBuilder_(context);
    }

    private void injectExtras_() {
        Intent intent_ = getIntent();
        Bundle extras_ = intent_.getExtras();
        if (extras_ != null) {
            if (extras_.containsKey("isEditable")) {
                try {
                    isEditable = ((Boolean) extras_.get("isEditable"));
                } catch (ClassCastException e) {
                    Log.e("CupboardPickupActivity_", "Could not cast extra to expected type, the field is left to its default value", e);
                }
            }
        }
    }

    @Override
    public void setIntent(Intent newIntent) {
        super.setIntent(newIntent);
        injectExtras_();
    }

    public static class IntentBuilder_ {

        private Context context_;
        private final Intent intent_;

        public IntentBuilder_(Context context) {
            context_ = context;
            intent_ = new Intent(context, CupboardPickupActivity_.class);
        }

        public Intent get() {
            return intent_;
        }

        public CupboardPickupActivity_.IntentBuilder_ flags(int flags) {
            intent_.setFlags(flags);
            return this;
        }

        public void start() {
            context_.startActivity(intent_);
        }

        public void startForResult(int requestCode) {
            if (context_ instanceof Activity) {
                ((Activity) context_).startActivityForResult(intent_, requestCode);
            } else {
                context_.startActivity(intent_);
            }
        }

        public CupboardPickupActivity_.IntentBuilder_ isEditable(boolean isEditable) {
            intent_.putExtra("isEditable", isEditable);
            return this;
        }

    }

}
