package net.kjmaster.cookiemom.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 *
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig scoutDaoConfig;
    private final DaoConfig orderDaoConfig;
    private final DaoConfig boothDaoConfig;
    private final DaoConfig cookieTransactionsDaoConfig;
    private final DaoConfig boothAssignmentsDaoConfig;

    private final ScoutDao scoutDao;
    private final OrderDao orderDao;
    private final BoothDao boothDao;
    private final CookieTransactionsDao cookieTransactionsDao;
    private final BoothAssignmentsDao boothAssignmentsDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        scoutDaoConfig = daoConfigMap.get(ScoutDao.class).clone();
        scoutDaoConfig.initIdentityScope(type);

        orderDaoConfig = daoConfigMap.get(OrderDao.class).clone();
        orderDaoConfig.initIdentityScope(type);

        boothDaoConfig = daoConfigMap.get(BoothDao.class).clone();
        boothDaoConfig.initIdentityScope(type);

        cookieTransactionsDaoConfig = daoConfigMap.get(CookieTransactionsDao.class).clone();
        cookieTransactionsDaoConfig.initIdentityScope(type);

        boothAssignmentsDaoConfig = daoConfigMap.get(BoothAssignmentsDao.class).clone();
        boothAssignmentsDaoConfig.initIdentityScope(type);

        scoutDao = new ScoutDao(scoutDaoConfig, this);
        orderDao = new OrderDao(orderDaoConfig, this);
        boothDao = new BoothDao(boothDaoConfig, this);
        cookieTransactionsDao = new CookieTransactionsDao(cookieTransactionsDaoConfig, this);
        boothAssignmentsDao = new BoothAssignmentsDao(boothAssignmentsDaoConfig, this);

        registerDao(Scout.class, scoutDao);
        registerDao(Order.class, orderDao);
        registerDao(Booth.class, boothDao);
        registerDao(CookieTransactions.class, cookieTransactionsDao);
        registerDao(BoothAssignments.class, boothAssignmentsDao);
    }

    public void clear() {
        scoutDaoConfig.getIdentityScope().clear();
        orderDaoConfig.getIdentityScope().clear();
        boothDaoConfig.getIdentityScope().clear();
        cookieTransactionsDaoConfig.getIdentityScope().clear();
        boothAssignmentsDaoConfig.getIdentityScope().clear();
    }

    public ScoutDao getScoutDao() {
        return scoutDao;
    }

    public OrderDao getOrderDao() {
        return orderDao;
    }

    public BoothDao getBoothDao() {
        return boothDao;
    }

    public CookieTransactionsDao getCookieTransactionsDao() {
        return cookieTransactionsDao;
    }

    public BoothAssignmentsDao getBoothAssignmentsDao() {
        return boothAssignmentsDao;
    }

}
